---
title: "Generate Schedules"
format: html
---

```{r}
library(tidyverse)
library(glue)
library(janitor)
library(readxl)
library(writexl)

options(scipen = 12, digits = 12)
```

Setup

```{r}
path_data <- glue(
  "C:/Users",
  "{Sys.getenv('USERNAME')}",
  "OneDrive - District of Columbia Public Schools",
  "Data",
  .sep = "/"
)
```

Read

```{r}
ledger <- read_csv(
  "data/csv/ledger.csv",
  col_types = cols(ending_balance = col_double(), .default = col_character())
)

personnel_categorized <-
  read_csv(
    "data/csv/personnel.csv",
    col_types = cols(
      amt_salary = col_double(),
      amt_benefits = col_double(),
      amt_direct = col_double(),
      amt_indirect = col_double(),
      amt_total = col_double(),
      amt_unrestricted = col_double(),
      amt_headcomponent_direct = col_double(),
      amt_headcomponent_indirect = col_double(),
      amt_headcomponent_total = col_double(),
      amt_terminal = col_double(),
      amt_terminal_to_indirect = col_double(),
      amt_terminal_restricted = col_double(),
      .default = col_character()
    )
  )

nonpersonnel_categorized <-
  read_csv(
    "data/csv/nonpersonnel_cat.csv",
    col_types = cols(
      amt_nonbudgetary = col_double(),
      amt_unallowable = col_double(),
      amt_excluded = col_double(),
      amt_direct = col_double(),
      amt_indirect = col_double(),
      amt_total = col_double(),
      .default = col_character()
    )
  )
```

Schedule H: Occupancy

```{r}
occupancy <-
  nonpersonnel_categorized %>%
  filter(is_split_occupancy == 1)

occupancy_total <-
  occupancy %>%
  summarize(
    amt_total = sum(amt_total),
    amt_direct = sum(amt_direct),
    amt_indirect = sum(amt_indirect)
  ) %>%
  mutate(account_desc = "OCCUPANCY TOTAL")

schedule_h <-
  occupancy %>%
  group_by(account_name) %>%
  summarize(
    amt_total = sum(amt_total),
    amt_direct = sum(amt_direct),
    amt_indirect = sum(amt_indirect)
  ) %>%
  arrange(desc(amt_total)) %>%
  bind_rows(occupancy_total)

schedule_h %>% write_xlsx("schedules/schedule_h.xlsx")
```

Schedule I: Excluded Costs

TODO:

* Missing cost centers

```{r}
schedule_i <-
  nonpersonnel_categorized %>%
  filter(amt_excluded != 0.00) %>%
  group_by(costcenter_clean, costcenter_name_clean, account, account_name) %>%
  summarize(amt_excluded = round(sum(amt_excluded), 2)) %>%
  ungroup() %>%
  arrange(costcenter_name_clean, account_name)

schedule_i %>% write_xlsx("schedules/schedule_i.xlsx")
```

Schedule J: Indirect Costs

* Missing cost centers

```{r}
schedule_j <-
  nonpersonnel_categorized %>%
  filter(amt_indirect != 0.00) %>%
  group_by(costcenter_clean, costcenter_name_clean, account, account_name) %>%
  summarize(amt_indirect = round(sum(amt_indirect), 2)) %>%
  ungroup() %>%
  arrange(costcenter_name_clean, account_name)

schedule_j_unallowable <-
  nonpersonnel_categorized %>%
  filter(amt_unallowable != 0.00) %>%
  group_by(costcenter_clean, costcenter_name_clean, account, account_name) %>%
  summarize(amt_unallowable = round(sum(amt_unallowable), 2)) %>%
  ungroup() %>%
  arrange(costcenter_name_clean, account_name)

schedule_j %>% write_xlsx("schedules/schedule_j.xlsx")

schedule_j_unallowable %>% write_xlsx("schedules/schedule_j_unallowable.xlsx")
```

A

```{r}
personnel_by_costcenter <-
  personnel_categorized %>%
  group_by(costcenter_clean) %>%
  summarize(
    amt_direct_ps = sum(amt_direct),
    amt_indirect_ps = sum(amt_indirect),
    amt_total_ps = sum(amt_total),
    .groups = "drop"
  )

nonpersonnel_by_costcenter <-
  nonpersonnel_categorized %>%
  group_by(costcenter_clean) %>%
  summarize(
    amt_nonbudgetary = sum(amt_nonbudgetary),
    amt_unallowable = sum(amt_unallowable),
    amt_excluded = sum(amt_excluded),
    amt_direct_nps = sum(amt_direct),
    amt_indirect_nps = sum(amt_indirect),
    .groups = "drop"
  ) %>%
  mutate(
    amt_budgetary = amt_unallowable + amt_excluded + amt_direct_nps + amt_indirect_nps,
    amt_unallowable_excluded = amt_unallowable + amt_excluded,
    amt_total_nps = amt_nonbudgetary + amt_unallowable + amt_excluded + amt_direct_nps + amt_indirect_nps,
  )

total_by_costcenter <-
  bind_rows(
    select(personnel_categorized, costcenter_name_clean, costcenter_clean),
    select(nonpersonnel_categorized, costcenter_name_clean, costcenter_clean)
  ) %>%
  distinct() %>%
  left_join(personnel_by_costcenter, by = join_by(costcenter_clean)) %>%
  left_join(nonpersonnel_by_costcenter, by = join_by(costcenter_clean)) %>%
  mutate(across(where(is_double), \(x) replace_na(x, 0.00))) %>%
  mutate(
    amt_direct = amt_direct_ps + amt_direct_nps,
    amt_indirect = amt_indirect_ps + amt_indirect_nps,
    amt_total = amt_total_ps + amt_total_nps
  ) %>%
  select(
    costcenter_clean, costcenter_name_clean,
    amt_total, amt_unallowable_excluded,
    amt_direct_ps, amt_direct_nps, amt_direct,
    amt_indirect_ps, amt_indirect_nps, amt_indirect
  ) %>%
  arrange(costcenter_name_clean)

total_by_costcenter %>% write_xlsx("schedules/total_by_costcenter.xlsx")
```

D.1

```{r}
schedule_d1 <-
  personnel_categorized %>%
  select(!starts_with("amt_terminal")) %>%
  group_by(
    costcenter_name_clean, categorization,
    name_clean, title, headcomponent,
  ) %>%
  summarize(
    amt_salary = sum(amt_salary),
    amt_benefits = sum(amt_benefits),
    amt_direct = sum(amt_direct),
    amt_indirect = sum(amt_indirect),
    amt_unrestricted = sum(amt_unrestricted),
    amt_headcomponent_direct = sum(amt_headcomponent_direct),
    amt_headcomponent_indirect = sum(amt_headcomponent_indirect),
    amt_headcomponent_total = sum(amt_headcomponent_total),
    .groups = "drop"
  ) %>%
  relocate(categorization)

schedule_d1 %>% write_xlsx("schedules/schedule_d1.xlsx")
```

D.2

```{r}
fringe_other <- c(
  "DC METRO BENEFITS",
  "MISC FRINGE BENEFITS",
  "RETIREMENT CONTRIBUTION - CIVIL SERVICE",
  "RETIREMENT CONTRIBUTION - TEACHERS",
  "UNEMPLOYMENT INSURANCE"
)

fringe <-
  ledger %>%
  filter(account_class_desc == "FRINGE BENEFITS - CURR PERSONNEL") %>%
  mutate(
    account_name = if_else(
      account_name %in% fringe_other, "OTHER", account_name
    )
  ) %>%
  group_by(account_name) %>%
  summarize(ending_balance = sum(ending_balance)) %>%
  mutate(is_other = account_name == "OTHER") %>%
  arrange(is_other, desc(ending_balance))

fringe_total <-
  fringe %>%
  summarize(ending_balance = sum(ending_balance)) %>%
  mutate(account_name = "TOTAL", .before = 0)

schedule_d2 <-
  fringe %>%
  filter(ending_balance != 0.00) %>%
  bind_rows(fringe_total) %>%
  select(!is_other)

schedule_d2 %>% write_xlsx("schedules/schedule_d2.xlsx")
```

E

```{r}
schedule_e <-
  personnel_categorized %>%
  filter(amt_terminal != 0.00) %>%
  select(!c(
    amt_salary, amt_benefits, amt_total,
    amt_direct, amt_indirect, amt_unrestricted,
    amt_headcomponent_direct, amt_headcomponent_indirect, amt_headcomponent_total
  )) %>%
  group_by(
    costcenter_name_clean, categorization,
    name_clean, title, headcomponent,
  ) %>%
  summarize(
    amt_terminal = sum(amt_terminal),
    amt_terminal_unrestricted = sum(amt_terminal_to_indirect),
    amt_terminal_restricted = sum(amt_terminal_restricted),
    .groups = "drop"
  ) %>%
  relocate(categorization)

schedule_e %>% write_xlsx("schedules/schedule_e.xlsx")
```

F

```{r}
schedule_f <-
  nonpersonnel_categorized %>%
  filter(is_po == TRUE) %>%
  group_by(costcenter_name_clean, po_number, party_name) %>%
  summarize(
    amt_total = sum(amt_total),
    amt_unallowable = sum(amt_unallowable),
    amt_excluded = sum(amt_excluded),
    amt_direct = sum(amt_direct),
    amt_indirect = sum(amt_indirect),
    .groups = "drop"
  ) %>%
  filter(amt_total != 0.00) %>%
  mutate(note = case_when(
    amt_direct != 0.00 & amt_indirect != 0.00 ~ "Subaward consists of both direct and indirect services.",
    amt_direct != 0.00 ~ "Some expenses moved to Direct Cost Pool for provision of FTE-like services.",
    amt_indirect != 0.00 ~ "Some expenses moved to Indirect Cost Pool for agency-wide indirect services.",
    .default = NA_character_
  ))

schedule_f %>% write_xlsx("schedules/schedule_f.xlsx")
```

I

```{r}
schedule_i <-
  nonpersonnel_categorized %>%
  filter(amt_excluded != 0.00) %>%
  mutate(exclusion_type = case_when(
    !is.na(is_excluded_food) ~ "food",
    !is.na(is_excluded_equipment) ~ "equipment",
    !is.na(is_excluded_passthrough) ~ "passthrough",
    is_capital == "TRUE" ~ "capital",
    is_grant == "TRUE" ~ "grant",
    is_po == "TRUE" ~ "subaward"
  )) %>%
  group_by(costcenter_name_clean, exclusion_type) %>%
  summarize(amt_excluded = sum(amt_excluded), .groups = "drop") %>%
  arrange((costcenter_name_clean), (amt_excluded)) %>%
  pivot_wider(
    names_from = exclusion_type,
    values_from = amt_excluded,
    names_sort = TRUE
  ) %>%
  mutate(across(where(is_double), \(x) replace_na(x, 0.00))) %>%
  relocate(c(capital, equipment, food, passthrough), .after = costcenter_name_clean)

schedule_i %>% write_xlsx("schedules/schedule_i.xlsx")
```

```{r}
Sys.time()
```
