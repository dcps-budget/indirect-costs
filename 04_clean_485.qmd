---
title: "Clean 485"
format: html
---

TODO:

* Payroll default records
* True up to GL

Depends on:

* clean_r023

```{r}
library(tidyverse)
library(glue)
library(janitor)
library(readxl)
library(writexl)

options(scipen = 12, digits = 12)
```

Setup

```{r}
path_data <- glue(
  "C:/Users",
  "{Sys.getenv('USERNAME')}",
  "OneDrive - District of Columbia Public Schools",
  "Data",
  .sep = "/"
)

path_working <- glue(
  "C:/Users",
  "{Sys.getenv('USERNAME')}",
  "OneDrive - District of Columbia Public Schools",
  "Working Files - Indirect Cost",
  .sep = "/"
)

fy <- 2024

dir_485 <- glue("{path_data}/Personnel/485/raw/{fy}")

total_r023 <- 1359378538.29
```

Read

Functions

```{r}
read_485 <- function(file_485, dir_485) {
  path <- glue(dir_485, file_485, .sep = "/")

  pp_485 <- str_sub(file_485, start = 1, end = 4)
  date_485 <- str_sub(file_485, start = 6, end = 15)
  group_485 <- str_remove(str_sub(file_485, start = 17, end = -1), ".xlsx")

  read_excel(path, col_types = "text") %>%
    mutate(
      pp_485 = pp_485,
      date_485 = date_485,
      group_485 = group_485
    )
}
```

Lookup tables

```{r}
programs <- read_excel("data/programs.xlsx")

categorization_prev <-
  read_excel("data/personnel_2023.xlsx", col_types = "text") %>%
  clean_names() %>%
  mutate(
    across(position, \(x) str_pad(x, width = 8, side = "left", pad = "0"))
  ) %>%
  distinct(costcenter, position, categorization_prev = position_type) %>%
  arrange(costcenter, position, categorization_prev)

categorization_sp <-
  read_excel(
    glue(
      "{path_working}/Categorization by Cost Center, Program 2, Program.xlsx"
    ),
    col_types = "text"
  ) %>%
  clean_names() %>%
  select(costcenter, program_2, program, categorization_sp, costcenter_name_clean)

categorization_override <-
  read_excel(
    glue(
      "{path_working}/Override Personnel.xlsx"
    ),
    col_types = "text"
  ) %>%
  clean_names() %>%
  distinct(costcenter, position, categorization_override)

pfr_start <-
  read_csv(
    glue("{path_data}/Personnel/PeopleSoft/raw/{fy}/pfr_{fy - 1}-10-01.csv"),
    col_types = cols(.default = col_character()),
    skip = 5,
    n_max = 14981
  ) %>%
  clean_names() %>%
  rename(costcenter = cost_center, position = position_number) %>%
  mutate(across(c(costcenter, position), \(x) str_remove_all(x, "=*\""))) %>%
  mutate(
    across(position, \(x) str_pad(x, width = 8, side = "left", pad = "0"))
  ) %>%
  mutate(across(c(title), \(x) str_to_upper(str_squish(x)))) %>%
  distinct(position, title_start = title)

pfr_end <-
  read_csv(
    glue("{path_data}/Personnel/PeopleSoft/raw/{fy}/pfr_{fy}-09-30.csv"),
    col_types = cols(.default = col_character()),
    skip = 5,
    n_max = 14892
  ) %>%
  clean_names() %>%
  rename(costcenter = cost_center, position = position_number) %>%
  mutate(across(c(costcenter, position), \(x) str_remove_all(x, "=*\""))) %>%
  mutate(
    across(position, \(x) str_pad(x, width = 8, side = "left", pad = "0"))
  ) %>%
  mutate(across(c(title), \(x) str_to_upper(str_squish(x)))) %>%
  distinct(position, title_end = title)

headcomponent <-
  read_excel(
    glue(
      "{path_working}/Head of Component.xlsx"
    ),
    col_types = "text"
  ) %>%
  clean_names() %>%
  distinct(costcenter, position, is_executive, is_headcomponent)

titles_manual <-
  read_excel(
    glue(
      "{path_working}/Missing - Title.xlsx"
    ),
    col_types = "text"
  ) %>%
  clean_names() %>%
  distinct(position, title_manual)
```

```{r}
files_485 <- list.files(dir_485)

data_485_raw <-
  map(
    files_485,
    \(file_485) read_485(file_485, dir_485)
  ) %>%
  list_rbind() %>%
  clean_names()

data_485 <- data_485_raw
```

Rename

```{r}
data_485_rename <-
  data_485 %>%
  rename(
    costcenter = cost_center,
    costcenter_name = cost_cntr_descr,
    program_name = prog_descr
  )
```

Transform

General ledger personnel expenses

```{r}
# total_485 <-
#   data_485 %>%
#   pull(amttot) %>%
#   as.numeric() %>%
#   sum()
#
# ratio_r023 <- total_r023 / total_485
```

```{r}
data_485_clean <-
  data_485_rename %>%
  select(
    report_agency:offcycle,
    sort(starts_with("hr_")),
    sort(starts_with("amt_")),
    everything()
  ) %>%
  mutate(across(position, \(x) str_pad(x, width = 8, side = "left", pad = "0"))) %>%
  mutate(across(c(name), \(x) str_to_upper(str_squish(x)))) %>%
  mutate(across(c(starts_with("amt_"), amttot), \(x) (as.numeric(x)))) %>%
  mutate(
    amt_nonpersonnel = rowSums(across(c(amt_spc_expense:amt_x3112009, amt_x7131002:amt_x7196007)))
  ) %>%
  mutate(
    amt_pay_base = rowSums(across(starts_with("amt_x7011") | starts_with("amt_x7012"))),
    amt_pay_additonal = rowSums(across(starts_with("amt_x7013"))),
    amt_overtime = rowSums(across(starts_with("amt_x7015"))),
    amt_exception = rowSums(across(starts_with("amt_x7016"))),
  ) %>%
  mutate(
    amt_salary = amt_pay_base + amt_pay_additonal + amt_overtime + amt_exception,
    amt_benefits = rowSums(across(starts_with("amt_x7014"))),
    amt_terminal = amt_x7013007
  ) %>%
  mutate(amt_total = (amt_nonpersonnel + amt_salary + amt_benefits)) %>%
  # correction
  mutate(position = if_else(emplid == "87062", "00089440", position)) %>%
  # correction
  mutate(costcenter = if_else(costcenter == "60030", "40081", costcenter)) %>%
  mutate(
    costcenter_name = if_else(costcenter == "40081", "OFFICE OF SCHOOL IMPROVEMENT AND SUPPORT", costcenter_name)
  ) %>%
  # correction
  mutate(
    costcenter_name = if_else(costcenter == "40079", "OFFICE OF DATA AND TECHNOLOGY", costcenter_name)
  ) %>%
  # correction
  mutate(program = if_else(program == "600181", "400267", program)) %>%
  mutate(
    program_name = if_else(program == "400267", "STUDENT PLACEMENT - SS", program_name)
  ) %>%
  # correction
  mutate(program = if_else(position == "00108956", "400011", program)) %>%
  mutate(
    program_name = if_else(program == "400011", "FOOD SERVICES - SWCS", program_name)
  ) %>%
  mutate(costcenter = if_else(program == "400011", "40078", costcenter)) %>%
  mutate(
    costcenter_name = if_else(costcenter == "40078", "OFFICE OF CHIEF OPERATING OFFICER", costcenter_name)
  )
```

```{r}
names_clean <-
  data_485_clean %>%
  distinct(emplid, name, pp_485) %>%
  group_by(emplid) %>%
  slice_max(order_by = pp_485, n = 1) %>%
  ungroup() %>%
  select(emplid, name_clean = name)
```

```{r}
costcenters_default <-
  data_485_clean %>%
  filter(program_name == "PAYROLL DEFAULT") %>%
  distinct(emplid) %>%
  left_join(data_485_clean, by = join_by(emplid)) %>%
  filter(program_name != "PAYROLL DEFAULT") %>%
  group_by(emplid, costcenter, costcenter_name, program, program_name) %>%
  summarize(amt_total = sum(amt_total)) %>%
  group_by(emplid) %>%
  slice_max(order_by = amt_total, n = 1) %>%
  ungroup() %>%
  select(
    emplid,
    costcenter_default = costcenter, costcenter_name_default = costcenter_name,
    program_default = program, program_name_default = program_name
  ) %>%
  mutate(is_default = TRUE)
```

Augment

```{r}
data_485_aug <-
  data_485_clean %>%
  mutate(is_default = if_else(program_name == "PAYROLL DEFAULT", TRUE, FALSE)) %>%
  left_join(costcenters_default, by = join_by(emplid, is_default)) %>%
  mutate(
    costcenter = if_else(!is.na(costcenter_default), costcenter_default, costcenter),
    costcenter_name = if_else(!is.na(costcenter_name_default), costcenter_name_default, costcenter_name),
    program = if_else(!is.na(program_default), program_default, program),
    program_name = if_else(!is.na(program_name_default), program_name_default, program_name)
  ) %>%
  left_join(programs, by = join_by(program)) %>%
  left_join(pfr_start, by = join_by(position)) %>%
  left_join(pfr_end, by = join_by(position)) %>%
  left_join(titles_manual, by = join_by(position)) %>%
  left_join(names_clean, by = join_by(emplid)) %>%
  left_join(headcomponent, by = join_by(costcenter, position)) %>%
  left_join(categorization_override, by = join_by(costcenter, position)) %>%
  left_join(categorization_prev, by = join_by(costcenter, position)) %>%
  left_join(categorization_sp, by = join_by(costcenter, program_2, program)) %>%
  mutate(title = case_when(
    !is.na(title_end) ~ title_end,
    !is.na(title_start) ~ title_start,
    .default = title_manual
  )) %>%
  mutate(headcomponent = case_when(
    is_executive == 1 ~ "Executive",
    is_headcomponent == 1 ~ "Head of component",
    .default = "Non-executive"
  )) %>%
  mutate(
    categorization = case_when(
      costcenter_name_clean == "Schools" ~ "Direct",
      !is.na(categorization_override) ~ categorization_override,
      !is.na(categorization_prev) ~ categorization_prev,
      .default = categorization_sp
    )
  ) %>%
  mutate(
    costcenter_clean = if_else(costcenter_name_clean == "Schools", "SCHOOLS", costcenter, missing = costcenter),
    costcenter_name_clean = if_else(!is.na(costcenter_name_clean), costcenter_name_clean, costcenter_name, , missing = costcenter_name)
  )
```

Schedules

D.1

```{r}
schedule_d1 <-
  data_485_aug %>%
  group_by(
    costcenter_clean, costcenter, program_2, program, position, emplid, headcomponent,
    costcenter_name_clean, costcenter_name, program_2_name, program_name, title, name_clean,
    categorization
  ) %>%
  summarize(
    amt_salary = sum(amt_salary),
    amt_benefits = sum(amt_benefits)
  ) %>%
  ungroup() %>%
  relocate(
    c(categorization, costcenter_name_clean, costcenter_name, program_2_name, program_name, title, name_clean, headcomponent)
  ) %>%
  mutate(
    amt_direct = if_else(categorization == "Direct", amt_salary + amt_benefits, 0),
    amt_indirect = if_else(categorization == "Indirect", amt_salary + amt_benefits, 0),
    amt_total = amt_salary + amt_benefits,
    amt_headcomponent_total = if_else(headcomponent != "Non-executive", amt_total, 0),
    amt_headcomponent_indirect = if_else(headcomponent != "Non-executive" & categorization == "Indirect", amt_total, 0)
  ) %>%
  # slice_sample(n = 10) %>%
  arrange(costcenter_name_clean, costcenter_name, program_2_name, program_name, title, name_clean) %>%
  relocate(c(costcenter_clean, program_2, program, position, emplid), .after = last_col())

schedule_d1 %>% write_xlsx("schedules/schedule_d1.xlsx")
```

Validations

Unique combinations

```{r}
categorization_override %>%
  distinct(position, costcenter, categorization_override) %>%
  count(position, costcenter, sort = T)
```

```{r}
data_485_aug %>%
  distinct(
    costcenter_name_clean, costcenter_name, program_name, title, name_clean,
    costcenter_clean, costcenter, program_2, position, emplid,
    categorization
  ) %>%
  nrow()
```

Every position is associated with only 1 title.

PASS

```{r}
data_485_aug %>%
  distinct(position, title) %>%
  count(position, sort = T) %>%
  filter(n > 1)
```

Every employee ID is associated with only 1 name.

PASS

```{r}
data_485_aug %>%
  distinct(emplid, name_clean) %>%
  count(emplid, sort = T) %>%
  filter(n > 1)
```

Every cost center, position group is associated with only 1 categorization.

PASS

```{r}
data_485_aug %>%
  distinct(costcenter, position, categorization) %>%
  count(costcenter, position, sort = T) %>%
  filter(n > 1)
```

Cost centers with more than 1 categorization.

```{r}
costcenters_multiple <-
  schedule_d1 %>%
  distinct(costcenter, categorization) %>%
  count(costcenter, sort = TRUE) %>%
  filter(n > 1) %>%
  filter(costcenter != "10002") %>%
  select(costcenter) %>%
  left_join(schedule_d1) %>%
  distinct(
    categorization,
    costcenter_name, program_2_name, program_name, title, name_clean,
    costcenter, program_2, program, position, emplid
  ) %>%
  arrange(costcenter_name, program_2_name, program_name, title, categorization)

costcenters_multiple %>% count(costcenter_name, categorization)
```
